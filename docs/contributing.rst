Contributing
------------

Regardless of your experience level with Zeek, there are ways that you could help. If you submit a pull request with a proposed change, an extensive set of `continuous integration tests <https://github.com/zeek-packages/software-browser-plugins/actions>`_ will run via `GitHub Actions <https://docs.github.com/en/free-pro-team@latest/actions>`_. These help ensure the quality of the package.


Reporting bugs or improvement ideas
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Issues are tracked on `GitHub <https://github.com/zeek-packages/software-browser-plugins/issues>`_. There's an issue template that helps capture the necessary information.

Improving the documentation
^^^^^^^^^^^^^^^^^^^^^^^^^^^

`The documentation <https://zeek-packages.github.io/software-browser-plugins/>`_ is hosted on `GitHub Pages <https://docs.github.com/en/free-pro-team@latest/github/working-with-github-pages>`_

Documentation is auto-generated by `Zeekygen <https://github.com/zeek/zeek/blob/master/scripts/zeekygen/example.zeek>`_ comments in the `scripts <https://github.com/zeek-packages/software-browser-plugins/tree/master/scripts>`_ and `reStructuredText <https://www.sphinx-doc.org/en/master/usage/restructuredtext/basics.html>`_ files in `docs/ <https://github.com/zeek-packages/software-browser-plugins/tree/master/docs>`_.

Contributing packet captures
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Often, finding realistic traffic to test on is very difficult. There
might be privacy concerns to sharing, or some data is just hard to
come by in the wild. Having a development environment (which can be as
simple as a VM or Docker container) where traffic can be generated
will often address both these potential issues.

Please note that the more realistic the traffic is, the better the end
result. Generating "cooked" traffic with Scapy or a hex editor can
trigger a detection, but might not reliably replicate real-world
conditions.

Increasing test coverage
^^^^^^^^^^^^^^^^^^^^^^^^

This package comes with a `test suite <https://github.com/zeek-packages/software-browser-plugins/tree/master/tests/software-browser-plugins>`_, using `btest <https://github.com/zeek/btest>`_. Each Zeek script is analyzed for code coverage by the tests, and stats are reported via `coveralls <https://coveralls.io/repos/github/zeek-packages/software-browser-plugins?branch=master>`_.
